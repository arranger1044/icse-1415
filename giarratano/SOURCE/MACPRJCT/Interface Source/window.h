   /*******************************************************/   /*      "C" Language Integrated Production System      */   /*                                                     */   /*            Macintosh Version 3.2  05/12/93          */   /*                                                     */   /*            GENERIC WINDOW HEADER FILE               */   /*******************************************************//*************************************************************//* Purpose:                                                  *//*                                                           *//* Principal Programmer(s):                                  *//*      Gary D. Riley                                        *//*                                                           *//* Contributing Programmer(s):                               *//*                                                           *//* Revision History:                                         *//*                                                           *//*************************************************************/#ifndef _H_window#define _H_window#include "setup.h"#include <Controls.h>#include <Events.h>#include <Windows.h>#include <Dialogs.h>#if MAC_MCW || MAC_SC7 || MAC_MPW || MAC_SC8#include <Printing.h>#else#include <PrintTraps.h>#endiftypedef struct WindowData    {     int windowType;     ControlHandle vScrollBar;     ControlHandle hScrollBar;     void (*growRoutine)(WindowPtr);     void (*zoomRoutine)(WindowPtr);     void (*updateRoutine)(WindowPtr);     short (*contentRoutine)(EventRecord *,WindowPtr);     void (*activateRoutine)(WindowPtr);     void (*deactivateRoutine)(WindowPtr);     void (*closeRoutine)(WindowPtr);     void (*printRoutine)(THPrint,WindowPtr);     void (*cursorRoutine)(WindowPtr);     void (*keystrokeRoutine)(WindowPtr,int,EventModifiers);     void (*selectRoutine)(WindowPtr);     void (*menuUpdateRoutine)(WindowPtr);     int (*applicationHook)(WindowPtr,EventRecord *,THPrint,char,int);    } WindowData, *WDPtr, **WDHandle;#define GROW_MESSAGE          1#define ZOOM_MESSAGE          2#define UPDATE_MESSAGE        3#define CONTENT_MESSAGE       4#define ACTIVATE_MESSAGE      5#define DEACTIVATE_MESSAGE    6#define CLOSE_MESSAGE         7#define PRINT_MESSAGE         8#define CURSOR_MESSAGE        9#define KEYSTROKE_MESSAGE    10#define SELECT_MESSAGE       11#define MENU_UPDATE_MESSAGE  12#ifdef LOCALE#undef LOCALE#endif#ifdef _WINDOW_SOURCE_#define LOCALE#else#define LOCALE extern#endif   LOCALE void                   DoDrag(WindowPtr,EventRecord *);   LOCALE void                   DoGrow(WindowPtr,EventRecord *);   LOCALE void                   DoZoom(WindowPtr,int,EventRecord *);   LOCALE short                  DoContent(WindowPtr,EventRecord *);   LOCALE void                   DoUpdate(EventRecord *);   LOCALE int                    DoActivate(EventRecord *);   LOCALE int                    WindowActivate(WindowPtr,int,int);   LOCALE void                   DoGoAway(WindowPtr,EventRecord *);   LOCALE void                   DoSuspendResume(EventRecord *);   LOCALE void                   DoClose(WindowPtr);   LOCALE void                   AddWindowToMenu(WindowPtr);   LOCALE void                   RemoveWindowFromMenu(WindowPtr);   LOCALE void                   UpdateWindowInMenu(WindowPtr);   LOCALE void                   UpdateWindowMenuCheck(WindowPtr,int);   LOCALE void                   SelectWindowFromMenu(int);   LOCALE void                   CenterWindowHorizontally(WindowPtr,float,int);   LOCALE void                   CenterWindowVertically(WindowPtr,float,int);   LOCALE void                   CenterWindow(WindowPtr,float,float);   LOCALE void                   CenterWindowWithOffset(WindowPtr,float,float,int,int);   LOCALE void                   FixScrollBar(ControlHandle,ControlHandle,WindowPtr,                                              short,short,short,short);   LOCALE int                    ToggleCheckBox(DialogPtr,int);   LOCALE int                    GetCheckBox(DialogPtr,int);   LOCALE int                    SetCheckBox(DialogPtr,int,int);   LOCALE void                   EnableWindowMenuItems(void);   LOCALE int                    GetScreenHeight(void);   LOCALE int                    GetScreenWidth(void);   LOCALE int                    GetWorkingScreenHeight(void);   LOCALE int                    GetWorkingScreenWidth(void);   LOCALE void                   OutlineButton(DialogPtr,int,int);   LOCALE void                   FlashButton(DialogPtr,int);   LOCALE pascal Boolean         DefaultDialogFilter(DialogPtr,EventRecord *,short int *);   LOCALE void                   HandleWindowEvents(void);   LOCALE pascal void            DefaultButtonUpdateRoutine(DialogPtr,short);   LOCALE pascal void            DefaultDialogLineUpdateRoutine(DialogPtr,short);   LOCALE void                   PlaceDialogTextItem(WindowPtr,int,int);   LOCALE void                   SetRadioBank(DialogPtr,int,int,int);   LOCALE short                  WindowDepth(WindowPtr);   LOCALE Boolean                SetupBackgroundMouseDrag(void);   LOCALE void                   UpdateWindowMenuDirty(WindowPtr,Boolean);   LOCALE short                  WindowType(WindowPtr);   LOCALE void                   GetGlobalWindowPosition(WindowPtr,short *,short *,short *,short *);  #ifndef _WINDOW_SOURCE_#if (MAC_MCW && __powerc) || MAC_SC8   extern RoutineDescriptor      DefaultDialogFilterRD;   extern RoutineDescriptor      DefaultDialogLineUpdateRoutineRD;#endif#endif#if (MAC_MCW && __powerc) || MAC_SC8#define DefaultDialogFilterRef &DefaultDialogFilterRD#define DefaultDialogLineUpdateRoutineRef &DefaultDialogLineUpdateRoutineRD#else#define DefaultDialogFilterRef DefaultDialogFilter#define DefaultDialogLineUpdateRoutineRef DefaultDialogLineUpdateRoutine#endif#endif